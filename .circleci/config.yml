version: 2.1

executors:
  default:
    docker:
      - image: circleci/openjdk:11.0.2-jdk
        environment:
          PGHOST: 127.0.0.1
          PGUSER: root
      - image: circleci/postgres:9.6.2-alpine
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: lunchmap
    working_directory: ~/repo

jobs:
  compile:
    executor:
      name: default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run:
          name: dependency:go-offline
          command: mvn dependency:go-offline
      - save_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - run:
          name: compile
          command: mvn compile
      - persist_to_workspace:
          root: target
          paths:
            - .
  test:
    executor:
      name: default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run:
          name: dependency:go-offline
          command: mvn dependency:go-offline
      - save_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - attach_workspace:
          at: .
      - run:
          name: install dockerize
          command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
          environment:
            DOCKERIZE_VERSION: v0.3.0
      - run:
          name: Wait for db
          command: dockerize -wait tcp://127.0.0.1:5432 -timeout 1m
      - run: 
          name: test
          command: mvn test
      - persist_to_workspace:
          root: target
          paths:
            - .
  package:
    executor:
      name: default
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}
            - v1-dependencies-
      - run:
          name: mvn dependency:go-offline
          command: mvn dependency:go-offline
      - save_cache:
          key: v1-dependencies-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2
      - attach_workspace:
          at: .
      - run:
          name: package
          command: mvn package
      - run:
          name: move artifacts
          command: |
            mkdir artifacts
            cp ./target/*-SNAPSHOT.jar ./artifacts/
      - store_artifacts:
          path: ./artifacts
  deploy:
    executor:
      name: default
    steps:
      - run: echo deploy

workflows:
  build-and-test-and-deploy:
    jobs:
      - compile
      - test:
          requires:
            - compile
      - package:
          requires:
            - test
      - deploy:
          requires:
            - package
          filters:
            branches:
              only:
                - master